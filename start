#!/bin/sh
ROOTFS_URL=https://alpha.de.repo.voidlinux.org/live/current/void-x86_64-ROOTFS-20191109.tar.xz
ESSENTIAL_SOFT="opendoas git dhcpcd";
USERSPACE_SOFT="xorg vim cmus lf zathura dmenu curl jq dunst firefox kpcli youtube-dl";
DEV_SOFT="go tcc base-devel";
TEXLIVE="texlive-most texlive-lang";

USERNAME=

choice() {
   PROMPT="$1";
   printf "%s[Y/n]: " "$PROMPT";
   read -r CHOICE;
   case "$CHOICE" in
      [Yy]* ) true  ;;
      [Nn]* ) false ;;
   esac
}

title() {
   TITLE=$*; 
   TITLELEN=$(echo "$TITLE" | wc -m);
   
   printlen() {
      for f in $(seq 2 "$TITLELEN"); do
         printf "-";
      done 
      printf "\n";
   }
   printlen;
   echo "$TITLE";
   printlen;
}
welcome() {
   title "start - installation script";
}
installbasesystem() {
   title "INSTALL BASE SYSTEM PACKAGE";
   set -x;
   xbps-install -Suy xbps;
   xbps-install -uy;
   xbps-install -y base-system;
   xbps-remove -y base-voidstrap;
   set +x;
}
passwdset() {
   title "SET ROOT PASSWORD"; 
   passwd;
}
hostnameset() {
   title "SET HOSTNAME";
   printf 'Type hostname: '
   read -r HOSTNAME ;
   echo "$HOSTNAME" > /etc/hostname;
}
setlocale() {
   title "SET LOCALE";
   echo "en_US.UTF-8 UTF-8" >> /etc/default/libc-locales;
   xbps-reconfigure -f glibc-locales;
}
genfstab() {
   title "GEN FSTAB";
   set -x;
   grep -v -e 'cgroup' -e 'sysfs' -e 'proc' -e 'tmpfs' -e 'securityfs' -e 'devpts' /proc/mounts \
      >> /etc/fstab;
   set +x;
}
installgrub() {
   title "INSTALL GRUB";
   xbps-install -y grub;
   printf "Where to install GRUB: ";
   read -r GRUBINSTALL;
   set -x;
   grub-install "$GRUBINSTALL";
   grub-mkconfig -o /boot/grub/grub.cfg;
   set +x;
}
setupdoas() {
   title "SETUP DOAS";
   set -x;
   echo "permit :wheel" > /etc/doas.conf
   set +x;
}
createuser() {
   title "CREATE USER";    
   printf "Enter username: ";
   read -r USERNAME; 
   useradd -m -G wheel "$USERNAME"; 
   export USERNAME;
   passwd "$USERNAME";
}
sanecclink() {
   title "LINK /bin/cc to SANE COMPILER";
   set -x;
   rm /bin/cc;
   ln -s /bin/tcc /bin/cc;
   set +x
}
finale() {
   title "EVERYTHING IS DONE! GOODBYE." 
}

# ROOT CONFIGURATION
welcome;
installbasesystem;
hostnameset;
setlocale;
passwdset;
if choice "Generate FSTAB"; then genfstab; fi
if choice "Install GRUB"; then installgrub; fi
title "INSTALL SOFTWARE";
if choice "Install Essential and Userspace software"; then xbps-install $ESSENTIAL_SOFT $USERSPACE_SOFT; fi
if choice "Install Texlive packages"; then $TEXLIVE; fi
if choice "Install base-devel and other toolchains"; then $DEV_SOFT; fi
if choice "Link TCC to /bin/cc"; then sanecclink; fi
setupdoas;

# USER CONFIGURATION
createuser;
doas -u "$USERNAME" /bin/sh << EOF
choice() {
   PROMPT="$1";
   printf "%s[Y/n]: " "$PROMPT";
   read -r CHOICE;
   case "$CHOICE" in
      [Yy]* ) true  ;;
      [Nn]* ) false ;;
   esac
}
dotfiles() {
   title "DOTFILES CONFIGURATION"; 
   set -x;
	git clone "https://github.com/ykmv/dotfiles";
	cd ~/dotfiles;
	sh symlinks.sh;
   set +x;
}
installsuckless() {
   title "INSTALL SUCKLESS SOFTWARE";
	mkdir ~/suckless;
	makesoft() {
      set -x;
	   git clone https://github.com/ykmv/"$1" ~/suckless/"$1";
	   cd ~/suckless/"$1";
	   make;
	   doas make install;
      set +x;
	}
	makesoft dwm;
	makesoft st;
}
if choice "Install Dotfiles"; then dotfiles; fi
if choice "Install Suckless software"; then installsuckless; fi
EOF
finale;
